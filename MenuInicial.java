/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import org.jdesktop.layout.GroupLayout;
import org.jdesktop.layout.LayoutStyle;

/**
 *
 * @author 20121144010125
 */
public class MenuInicial extends javax.swing.JFrame {

    /**
     * Creates new form menuinicial
     */
    public MenuInicial() {
        initComponents();
        setIcon();
        bot√£oX();
    }

    Agenda agenda = new Agenda();
    Contato contato = new Contato();
    Contato contato2 = new Contato();
    private List<Contato> contatosbusc = new ArrayList<Contato>();
    private List<Contato> carq = new ArrayList<Contato>();
    boolean testeLayoutBuscarPorNome = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BD_Excluir = new JPopupMenu();
        M_excluir = new JMenuItem();
        jPanel1 = new JPanel();
        P_fixo = new JPanel();
        jLabel1 = new JLabel();
        B_Adicionar = new JButton();
        B_buscar = new JButton();
        Ver = new JButton();
        Pl_opcoes = new JPanel();
        bemvindo = new JPanel();
        jLabel5 = new JLabel();
        P_inserir = new JPanel();
        jLabel6 = new JLabel();
        nomeAdd = new JTextField();
        jLabel7 = new JLabel();
        CpfAdd = new JFormattedTextField();
        jLabel8 = new JLabel();
        EmailAdd = new JTextField();
        jLabel9 = new JLabel();
        TelAdd = new JFormattedTextField();
        B_salvar = new JButton();
        P_buscar = new JPanel();
        jLabel13 = new JLabel();
        B_Aexcluir = new JButton();
        Box_pp = new JComboBox();
        Pl_buscarpor = new JPanel();
        P_Bcpf = new JPanel();
        CpfUsu = new JFormattedTextField();
        B_busporcpf = new JButton();
        P_Bemail = new JPanel();
        EmailUsu = new JTextField();
        B_busPoremail = new JButton();
        P_Bnome = new JPanel();
        B_buspornome = new JButton();
        NomeUsu = new JTextField();
        Pl_JanelaTxt = new JPanel();
        p_limpotxtbusc = new JPanel();
        P_txtbusc = new JPanel();
        jScrollPane1 = new JScrollPane();
        textousubusc = new JTextArea();
        P_tabelabusc = new JPanel();
        jScrollPane2 = new JScrollPane();
        Tabelausu = new JTable();
        P_Visualizar = new JPanel();
        jScrollPane3 = new JScrollPane();
        Tabelausu1 = new JTable();
        P_limpov = new JPanel();
        jLabel2 = new JLabel();

        M_excluir.setText("Excluir");
        M_excluir.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                M_excluirActionPerformed(evt);
            }
        });
        BD_Excluir.add(M_excluir);

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agenda");
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBackground(new Color(0, 153, 255));
        jPanel1.setPreferredSize(new Dimension(400, 460));

        P_fixo.setBackground(new Color(0, 153, 255));
        P_fixo.setBorder(BorderFactory.createEtchedBorder());

        jLabel1.setFont(new Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setText(" CONTATOS");

        B_Adicionar.setBackground(new Color(102, 0, 255));
        B_Adicionar.setFont(new Font("Comic Sans MS", 1, 14)); // NOI18N
        B_Adicionar.setForeground(new Color(255, 255, 255));
        B_Adicionar.setText("Adicionar");
        B_Adicionar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                B_AdicionarActionPerformed(evt);
            }
        });

        B_buscar.setBackground(new Color(102, 0, 255));
        B_buscar.setFont(new Font("Comic Sans MS", 1, 14)); // NOI18N
        B_buscar.setForeground(new Color(255, 255, 255));
        B_buscar.setText("Buscar");
        B_buscar.setPreferredSize(new Dimension(95, 29));
        B_buscar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                B_buscarActionPerformed(evt);
            }
        });

        Ver.setBackground(new Color(102, 0, 255));
        Ver.setFont(new Font("Comic Sans MS", 1, 14)); // NOI18N
        Ver.setForeground(new Color(255, 255, 255));
        Ver.setText("Ver");
        Ver.setPreferredSize(new Dimension(95, 29));
        Ver.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                VerActionPerformed(evt);
            }
        });

        GroupLayout P_fixoLayout = new GroupLayout(P_fixo);
        P_fixo.setLayout(P_fixoLayout);
        P_fixoLayout.setHorizontalGroup(P_fixoLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_fixoLayout.createSequentialGroup()
                .addContainerGap()
                .add(Ver, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.RELATED, 17, Short.MAX_VALUE)
                .add(B_Adicionar)
                .add(18, 18, 18)
                .add(B_buscar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(P_fixoLayout.createSequentialGroup()
                .add(81, 81, 81)
                .add(jLabel1, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        P_fixoLayout.setVerticalGroup(P_fixoLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_fixoLayout.createSequentialGroup()
                .add(6, 6, 6)
                .add(jLabel1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.UNRELATED)
                .add(P_fixoLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(B_buscar, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(B_Adicionar, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(Ver, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        Pl_opcoes.setBackground(new Color(0, 153, 255));
        Pl_opcoes.setPreferredSize(new Dimension(330, 250));
        Pl_opcoes.setLayout(new CardLayout());

        bemvindo.setBackground(new Color(0, 153, 255));

        jLabel5.setFont(new Font("Comic Sans MS", 1, 36)); // NOI18N
        jLabel5.setForeground(new Color(255, 255, 255));
        jLabel5.setText("Bem vindo");

        GroupLayout bemvindoLayout = new GroupLayout(bemvindo);
        bemvindo.setLayout(bemvindoLayout);
        bemvindoLayout.setHorizontalGroup(bemvindoLayout.createParallelGroup(GroupLayout.LEADING)
            .add(bemvindoLayout.createSequentialGroup()
                .add(85, 85, 85)
                .add(jLabel5)
                .addContainerGap(85, Short.MAX_VALUE))
        );
        bemvindoLayout.setVerticalGroup(bemvindoLayout.createParallelGroup(GroupLayout.LEADING)
            .add(bemvindoLayout.createSequentialGroup()
                .add(47, 47, 47)
                .add(jLabel5)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        Pl_opcoes.add(bemvindo, "card5");

        P_inserir.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Adicionar", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Comic Sans MS", 1, 18))); // NOI18N
        P_inserir.setPreferredSize(new Dimension(330, 250));

        jLabel6.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel6.setText("Nome");

        jLabel7.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel7.setText("CPF");

        try {
            CpfAdd.setFormatterFactory(new DefaultFormatterFactory(new MaskFormatter("###.###.###-##")));
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        CpfAdd.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                CpfAddActionPerformed(evt);
            }
        });

        jLabel8.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel8.setText("Email");

        jLabel9.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel9.setText("Tel.");

        try {
            TelAdd.setFormatterFactory(new DefaultFormatterFactory(new MaskFormatter("(##) #####-####")));
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        TelAdd.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                TelAddActionPerformed(evt);
            }
        });

        B_salvar.setBackground(new Color(35, 186, 35));
        B_salvar.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        B_salvar.setText("Salvar");
        B_salvar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                B_salvarActionPerformed(evt);
            }
        });

        GroupLayout P_inserirLayout = new GroupLayout(P_inserir);
        P_inserir.setLayout(P_inserirLayout);
        P_inserirLayout.setHorizontalGroup(P_inserirLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_inserirLayout.createSequentialGroup()
                .add(28, 28, 28)
                .add(P_inserirLayout.createParallelGroup(GroupLayout.TRAILING)
                    .add(B_salvar)
                    .add(P_inserirLayout.createSequentialGroup()
                        .add(P_inserirLayout.createParallelGroup(GroupLayout.LEADING)
                            .add(jLabel7)
                            .add(jLabel8)
                            .add(jLabel9)
                            .add(jLabel6))
                        .add(18, 18, 18)
                        .add(P_inserirLayout.createParallelGroup(GroupLayout.TRAILING, false)
                            .add(GroupLayout.LEADING, EmailAdd)
                            .add(GroupLayout.LEADING, CpfAdd)
                            .add(GroupLayout.LEADING, nomeAdd)
                            .add(TelAdd, GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        P_inserirLayout.setVerticalGroup(P_inserirLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_inserirLayout.createSequentialGroup()
                .addContainerGap()
                .add(P_inserirLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(jLabel6)
                    .add(nomeAdd, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.UNRELATED)
                .add(P_inserirLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(CpfAdd, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.UNRELATED)
                .add(P_inserirLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(jLabel8)
                    .add(EmailAdd, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .add(9, 9, 9)
                .add(P_inserirLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(TelAdd, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .add(28, 28, 28)
                .add(B_salvar)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        Pl_opcoes.add(P_inserir, "P_inserir");

        P_buscar.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Buscar", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Comic Sans MS", 1, 18))); // NOI18N
        P_buscar.setForeground(new Color(255, 255, 255));
        P_buscar.setPreferredSize(new Dimension(330, 250));

        jLabel13.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel13.setText("Pesquisar por:");

        B_Aexcluir.setBackground(new Color(255, 0, 0));
        B_Aexcluir.setFont(new Font("Comic Sans MS", 1, 12)); // NOI18N
        B_Aexcluir.setForeground(new Color(255, 255, 255));
        B_Aexcluir.setText("Excluir");
        B_Aexcluir.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                B_AexcluirActionPerformed(evt);
            }
        });

        Box_pp.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        Box_pp.setModel(new DefaultComboBoxModel(new String[] { "CPF", "Email", "Nome" }));
        Box_pp.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                Box_ppActionPerformed(evt);
            }
        });

        Pl_buscarpor.setLayout(new CardLayout());

        P_Bcpf.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "CPF", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Comic Sans MS", 0, 14))); // NOI18N
        P_Bcpf.setPreferredSize(new Dimension(266, 78));
        P_Bcpf.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                P_BcpfKeyPressed(evt);
            }
        });

        try {
            CpfUsu.setFormatterFactory(new DefaultFormatterFactory(new MaskFormatter("###.###.###-##")));
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        CpfUsu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                CpfUsuActionPerformed(evt);
            }
        });

        B_busporcpf.setBackground(new Color(35, 186, 35));
        B_busporcpf.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        B_busporcpf.setText("Buscar");
        B_busporcpf.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                B_busporcpfActionPerformed(evt);
            }
        });

        GroupLayout P_BcpfLayout = new GroupLayout(P_Bcpf);
        P_Bcpf.setLayout(P_BcpfLayout);
        P_BcpfLayout.setHorizontalGroup(P_BcpfLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_BcpfLayout.createSequentialGroup()
                .add(6, 6, 6)
                .add(CpfUsu, GroupLayout.PREFERRED_SIZE, 171, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(B_busporcpf, GroupLayout.PREFERRED_SIZE, 70, Short.MAX_VALUE)
                .add(22, 22, 22))
        );
        P_BcpfLayout.setVerticalGroup(P_BcpfLayout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, P_BcpfLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(P_BcpfLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(CpfUsu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(B_busporcpf))
                .addContainerGap())
        );

        Pl_buscarpor.add(P_Bcpf, "P_Bcpf");

        P_Bemail.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Email", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Comic Sans MS", 0, 14))); // NOI18N
        P_Bemail.setPreferredSize(new Dimension(266, 78));

        EmailUsu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                EmailUsuActionPerformed(evt);
            }
        });

        B_busPoremail.setBackground(new Color(35, 186, 35));
        B_busPoremail.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        B_busPoremail.setText("Buscar");
        B_busPoremail.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                B_busPoremailActionPerformed(evt);
            }
        });

        GroupLayout P_BemailLayout = new GroupLayout(P_Bemail);
        P_Bemail.setLayout(P_BemailLayout);
        P_BemailLayout.setHorizontalGroup(P_BemailLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_BemailLayout.createSequentialGroup()
                .add(6, 6, 6)
                .add(EmailUsu, GroupLayout.PREFERRED_SIZE, 171, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(B_busPoremail, GroupLayout.PREFERRED_SIZE, 70, Short.MAX_VALUE)
                .add(26, 26, 26))
        );
        P_BemailLayout.setVerticalGroup(P_BemailLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_BemailLayout.createSequentialGroup()
                .add(0, 11, Short.MAX_VALUE)
                .add(P_BemailLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(B_busPoremail)
                    .add(EmailUsu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Pl_buscarpor.add(P_Bemail, "P_Bemail");

        P_Bnome.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Nome", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Comic Sans MS", 0, 14))); // NOI18N
        P_Bnome.setPreferredSize(new Dimension(266, 78));

        B_buspornome.setBackground(new Color(35, 186, 35));
        B_buspornome.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        B_buspornome.setText("Buscar");
        B_buspornome.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                B_buspornomeActionPerformed(evt);
            }
        });

        NomeUsu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                NomeUsuActionPerformed(evt);
            }
        });

        GroupLayout P_BnomeLayout = new GroupLayout(P_Bnome);
        P_Bnome.setLayout(P_BnomeLayout);
        P_BnomeLayout.setHorizontalGroup(P_BnomeLayout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, P_BnomeLayout.createSequentialGroup()
                .addContainerGap()
                .add(NomeUsu, GroupLayout.PREFERRED_SIZE, 171, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(B_buspornome, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
                .add(3, 3, 3))
        );
        P_BnomeLayout.setVerticalGroup(P_BnomeLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_BnomeLayout.createSequentialGroup()
                .addContainerGap()
                .add(P_BnomeLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(B_buspornome)
                    .add(NomeUsu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Pl_buscarpor.add(P_Bnome, "P_Bnome");

        Pl_JanelaTxt.setLayout(new CardLayout());

        GroupLayout p_limpotxtbuscLayout = new GroupLayout(p_limpotxtbusc);
        p_limpotxtbusc.setLayout(p_limpotxtbuscLayout);
        p_limpotxtbuscLayout.setHorizontalGroup(p_limpotxtbuscLayout.createParallelGroup(GroupLayout.LEADING)
            .add(0, 332, Short.MAX_VALUE)
        );
        p_limpotxtbuscLayout.setVerticalGroup(p_limpotxtbuscLayout.createParallelGroup(GroupLayout.LEADING)
            .add(0, 122, Short.MAX_VALUE)
        );

        Pl_JanelaTxt.add(p_limpotxtbusc, "P_limpotxtbusc");

        P_txtbusc.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Usu√°rio"));

        textousubusc.setEditable(false);
        textousubusc.setColumns(20);
        textousubusc.setFont(new Font("Comic Sans MS", 0, 12)); // NOI18N
        textousubusc.setRows(5);
        textousubusc.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        textousubusc.setDragEnabled(true);
        jScrollPane1.setViewportView(textousubusc);

        GroupLayout P_txtbuscLayout = new GroupLayout(P_txtbusc);
        P_txtbusc.setLayout(P_txtbuscLayout);
        P_txtbuscLayout.setHorizontalGroup(P_txtbuscLayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane1, GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );
        P_txtbuscLayout.setVerticalGroup(P_txtbuscLayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane1, GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        Pl_JanelaTxt.add(P_txtbusc, "P_txtbusc");

        Tabelausu.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "Email", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                String.class, String.class, String.class, String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabelausu.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                TabelausuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tabelausu);
        if (Tabelausu.getColumnModel().getColumnCount() > 0) {
            Tabelausu.getColumnModel().getColumn(0).setPreferredWidth(100);
        }

        GroupLayout P_tabelabuscLayout = new GroupLayout(P_tabelabusc);
        P_tabelabusc.setLayout(P_tabelabuscLayout);
        P_tabelabuscLayout.setHorizontalGroup(P_tabelabuscLayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane2, GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
        );
        P_tabelabuscLayout.setVerticalGroup(P_tabelabuscLayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane2, GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
        );

        Pl_JanelaTxt.add(P_tabelabusc, "P_tabelabusc");

        GroupLayout P_buscarLayout = new GroupLayout(P_buscar);
        P_buscar.setLayout(P_buscarLayout);
        P_buscarLayout.setHorizontalGroup(P_buscarLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_buscarLayout.createSequentialGroup()
                .add(28, 28, 28)
                .add(P_buscarLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(Pl_buscarpor, GroupLayout.PREFERRED_SIZE, 266, GroupLayout.PREFERRED_SIZE)
                    .add(P_buscarLayout.createSequentialGroup()
                        .add(jLabel13)
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(Box_pp, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(B_Aexcluir))))
            .add(GroupLayout.TRAILING, Pl_JanelaTxt, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        P_buscarLayout.setVerticalGroup(P_buscarLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_buscarLayout.createSequentialGroup()
                .add(P_buscarLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(Box_pp, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13)
                    .add(B_Aexcluir))
                .add(9, 9, 9)
                .add(Pl_buscarpor, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(Pl_JanelaTxt, GroupLayout.PREFERRED_SIZE, 122, GroupLayout.PREFERRED_SIZE)
                .add(82, 82, 82))
        );

        Pl_opcoes.add(P_buscar, "P_buscar");

        P_Visualizar.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Contatos", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font("Comic Sans MS", 1, 18))); // NOI18N
        P_Visualizar.setLayout(new CardLayout());

        Tabelausu1.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "Email", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                String.class, String.class, String.class, String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabelausu1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                Tabelausu1MouseClicked(evt);
            }
            public void mouseReleased(MouseEvent evt) {
                Tabelausu1MouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(Tabelausu1);
        if (Tabelausu1.getColumnModel().getColumnCount() > 0) {
            Tabelausu1.getColumnModel().getColumn(0).setPreferredWidth(100);
        }

        P_Visualizar.add(jScrollPane3, "tabela2");

        jLabel2.setFont(new Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setText("Nenhum Contato Cadastrado!");

        GroupLayout P_limpovLayout = new GroupLayout(P_limpov);
        P_limpov.setLayout(P_limpovLayout);
        P_limpovLayout.setHorizontalGroup(P_limpovLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_limpovLayout.createSequentialGroup()
                .add(65, 65, 65)
                .add(jLabel2)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        P_limpovLayout.setVerticalGroup(P_limpovLayout.createParallelGroup(GroupLayout.LEADING)
            .add(P_limpovLayout.createSequentialGroup()
                .add(96, 96, 96)
                .add(jLabel2)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        P_Visualizar.add(P_limpov, "P_limpov");

        Pl_opcoes.add(P_Visualizar, "P_visualisar");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jPanel1Layout.createParallelGroup(GroupLayout.LEADING, false)
                    .add(Pl_opcoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(P_fixo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(38, 38, 38)
                .add(P_fixo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29)
                .add(Pl_opcoes, GroupLayout.PREFERRED_SIZE, 273, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void B_buscarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_B_buscarActionPerformed

        CardLayout cards = (CardLayout) Pl_opcoes.getLayout();
        cards.show(Pl_opcoes, "P_buscar");
        CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
        cards1.show(Pl_JanelaTxt, "P_limpotxtbusc");
        B_Aexcluir.setEnabled(false);
    }//GEN-LAST:event_B_buscarActionPerformed

    private void B_AdicionarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_B_AdicionarActionPerformed

        nomeAdd.setText("");
        CpfAdd.setText("");
        EmailAdd.setText("");
        TelAdd.setText("");
        CardLayout cards = (CardLayout) Pl_opcoes.getLayout();
        cards.show(Pl_opcoes, "P_inserir");
    }//GEN-LAST:event_B_AdicionarActionPerformed

    private void CpfAddActionPerformed(ActionEvent evt) {//GEN-FIRST:event_CpfAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CpfAddActionPerformed

    private void TelAddActionPerformed(ActionEvent evt) {//GEN-FIRST:event_TelAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TelAddActionPerformed

    private void B_salvarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_B_salvarActionPerformed
        if ("".equals(nomeAdd.getText()) || "".equals(EmailAdd.getText()) || "(  )      -    ".equals(TelAdd.getText()) || "   .   .   -  ".equals(CpfAdd.getText())) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos");
        } else {
            //testar cpf ja existe
            Contato teste = new Contato();

            try {
                teste = agenda.buscarContatoPorCPF(CpfAdd.getText());
                JOptionPane.showMessageDialog(null, "Esse CPF j√° foi cadastrado");
            } catch (ContatoNaoEncontrado ex) {
                try {
                    teste = agenda.buscarContatoPorEmail(EmailUsu.getText());
                    JOptionPane.showMessageDialog(null, "Esse Email j√° foi cadastrado");
                } catch (ContatoNaoEncontrado ex1) {
                    contato = new Contato();
                    contato.setNome(nomeAdd.getText());
                    contato.setCPF(CpfAdd.getText());
                    contato.setEmail(EmailAdd.getText());
                    contato.setTelefone(TelAdd.getText());
                    agenda.inserirContato(contato);
                    nomeAdd.setText("");
                    CpfAdd.setText("");
                    EmailAdd.setText("");
                    TelAdd.setText("");
                    JOptionPane.showMessageDialog(null, "Contato salvo com sucesso");

                }

            }

        }

    }//GEN-LAST:event_B_salvarActionPerformed

    private void B_busporcpfActionPerformed(ActionEvent evt) {//GEN-FIRST:event_B_busporcpfActionPerformed
        try {

            CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
            cards1.show(Pl_JanelaTxt, "P_limpotxtbusc");
            contato2 = new Contato();
            contato2 = agenda.buscarContatoPorCPF(CpfUsu.getText());
            CpfUsu.setText(null);
            cards1.show(Pl_JanelaTxt, "P_txtbusc");
            textousubusc.setText("Nome: " + contato2.getNome()
                    + "\nEmail: " + contato2.getEmail()
                    + "\nTel: " + contato2.getTelefone()
                    + "\nCPF: " + contato2.getCPF());
            B_Aexcluir.setEnabled(true);
            NomeUsu.setText("");
            CpfUsu.setText("");
            EmailUsu.setText("");

        } catch (ContatoNaoEncontrado ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            B_Aexcluir.setEnabled(false);
        }
    }//GEN-LAST:event_B_busporcpfActionPerformed

    private void CpfUsuActionPerformed(ActionEvent evt) {//GEN-FIRST:event_CpfUsuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CpfUsuActionPerformed

    private void Box_ppActionPerformed(ActionEvent evt) {//GEN-FIRST:event_Box_ppActionPerformed
        if (Box_pp.getSelectedIndex() == 0) {
            B_Aexcluir.setEnabled(false);
            testeLayoutBuscarPorNome = false;
            CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
            cards1.show(Pl_JanelaTxt, "P_limpotxtbusc");
            CpfUsu.setText("");
            CardLayout cards2 = (CardLayout) Pl_buscarpor.getLayout();
            cards2.show(Pl_buscarpor, "P_Bcpf");

        }
        if (Box_pp.getSelectedIndex() == 1) {
            B_Aexcluir.setEnabled(false);
            testeLayoutBuscarPorNome = false;
            CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
            cards1.show(Pl_JanelaTxt, "P_limpotxtbusc");
            EmailUsu.setText("");
            CardLayout cards2 = (CardLayout) Pl_buscarpor.getLayout();
            cards2.show(Pl_buscarpor, "P_Bemail");
        }
        if (Box_pp.getSelectedIndex() == 2) {
            B_Aexcluir.setEnabled(false);
            testeLayoutBuscarPorNome = true;
            CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
            cards1.show(Pl_JanelaTxt, "P_limpotxtbusc");
            NomeUsu.setText("");
            CardLayout cards2 = (CardLayout) Pl_buscarpor.getLayout();
            cards2.show(Pl_buscarpor, "P_Bnome");
        }
    }//GEN-LAST:event_Box_ppActionPerformed

    private void B_busPoremailActionPerformed(ActionEvent evt) {//GEN-FIRST:event_B_busPoremailActionPerformed
        try {
            CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
            cards1.show(Pl_JanelaTxt, "P_limpotxtbusc");
            contato2 = new Contato();
            contato2 = agenda.buscarContatoPorEmail(EmailUsu.getText());
            EmailUsu.setText(null);
            cards1.show(Pl_JanelaTxt, "P_txtbusc");
            textousubusc.setText("Nome: " + contato2.getNome()
                    + "\nEmail: " + contato2.getEmail()
                    + "\nTel: " + contato2.getTelefone()
                    + "\nCPF: " + contato2.getCPF());
            B_Aexcluir.setEnabled(true);
            NomeUsu.setText("");
            CpfUsu.setText("");
            EmailUsu.setText("");

        } catch (ContatoNaoEncontrado ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            B_Aexcluir.setEnabled(false);
        }
    }//GEN-LAST:event_B_busPoremailActionPerformed

    private void EmailUsuActionPerformed(ActionEvent evt) {//GEN-FIRST:event_EmailUsuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailUsuActionPerformed


    private void B_buspornomeActionPerformed(ActionEvent evt) {//GEN-FIRST:event_B_buspornomeActionPerformed
        try {
            DefaultTableModel usumesmonome = (DefaultTableModel) Tabelausu.getModel();
            usumesmonome.setNumRows(0);
            contatosbusc = new ArrayList<Contato>();
            contatosbusc = agenda.buscarContatoPorNome(NomeUsu.getText());
            CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
            cards1.show(Pl_JanelaTxt, "P_tabelabusc");
            for (int i = 0; i < contatosbusc.size(); i++) {
                String[] dados = {contatosbusc.get(i).getNome(), contatosbusc.get(i).getCPF(), contatosbusc.get(i).getEmail(), contatosbusc.get(i).getTelefone()};
                usumesmonome.addRow(dados);
            }
            NomeUsu.setText("");
        } catch (ContatoNaoEncontrado ex) {
            CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
            cards1.show(Pl_JanelaTxt, "P_limpotxtbusc");
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_B_buspornomeActionPerformed

    private void NomeUsuActionPerformed(ActionEvent evt) {//GEN-FIRST:event_NomeUsuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeUsuActionPerformed

    private void B_AexcluirActionPerformed(ActionEvent evt) {//GEN-FIRST:event_B_AexcluirActionPerformed
        if (testeLayoutBuscarPorNome == true) {
            B_Aexcluir.setEnabled(false);
            if (Tabelausu.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "Selecione um contato na lista");
            } else {
                Object[] options = {"Sim", "N√£o"};
                int x = JOptionPane.showConfirmDialog(null, "Quer mesmo apagar o usu√°rio " + Tabelausu.getValueAt(Tabelausu.getSelectedRow(), 0).toString(), null, JOptionPane.YES_NO_OPTION);
                if (x == 0) {
                    DefaultTableModel usumesmonome = (DefaultTableModel) Tabelausu.getModel();
                    contato2 = new Contato();
                    try {
                        CardLayout card = (CardLayout) Pl_JanelaTxt.getLayout();
                        contato2 = agenda.buscarContatoPorCPF(Tabelausu.getValueAt(Tabelausu.getSelectedRow(), 1).toString());
                        usumesmonome.removeRow(Tabelausu.getSelectedRow());
                        agenda.removerContato(contato2);
                        if (agenda.returncontatos().size() == 0) {
                            card.show(Pl_JanelaTxt, "P_limpotxtbusc");
                        }
                        JOptionPane.showMessageDialog(null, "Excluido com sucesso");
                    } catch (ContatoNaoEncontrado ex) {
                        Logger.getLogger(MenuInicial.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } else {
            Object[] options = {"Sim", "N√£o"};
            int x = JOptionPane.showConfirmDialog(null, "Quer mesmo apagar o usu√°rio " + contato2.getNome(), null, JOptionPane.YES_NO_OPTION);
            if (x == 0) {
                agenda.removerContato(contato2);
                JOptionPane.showMessageDialog(null, "Excluido com sucesso");
                CardLayout cards1 = (CardLayout) Pl_JanelaTxt.getLayout();
                cards1.show(Pl_JanelaTxt, "P_limpotxtbusc");
                B_Aexcluir.setEnabled(false);

            }
        }
    }//GEN-LAST:event_B_AexcluirActionPerformed

    private void TabelausuMouseClicked(MouseEvent evt) {//GEN-FIRST:event_TabelausuMouseClicked
        B_Aexcluir.setEnabled(true);
    }//GEN-LAST:event_TabelausuMouseClicked

    private void P_BcpfKeyPressed(KeyEvent evt) {//GEN-FIRST:event_P_BcpfKeyPressed

    }//GEN-LAST:event_P_BcpfKeyPressed

    private void VerActionPerformed(ActionEvent evt) {//GEN-FIRST:event_VerActionPerformed
        CardLayout cardsv = (CardLayout) Pl_opcoes.getLayout();
        CardLayout cardsv1 = (CardLayout) P_Visualizar.getLayout();
        DefaultTableModel usumesmonome = (DefaultTableModel) Tabelausu1.getModel();
        usumesmonome.setNumRows(0);
        contatosbusc = agenda.returncontatos();
        if (contatosbusc.size() == 0) {
            cardsv.show(Pl_opcoes, "P_visualisar");
            cardsv1.show(P_Visualizar, "P_limpov");
        } else {
            cardsv.show(Pl_opcoes, "P_visualisar");
            cardsv1.show(P_Visualizar, "tabela2");
            for (int i = 0; i < contatosbusc.size(); i++) {
                String[] dados = {contatosbusc.get(i).getNome(), contatosbusc.get(i).getCPF(), contatosbusc.get(i).getEmail(), contatosbusc.get(i).getTelefone()};
                usumesmonome.addRow(dados);
            }
        }
    }//GEN-LAST:event_VerActionPerformed

    private void Tabelausu1MouseClicked(MouseEvent evt) {//GEN-FIRST:event_Tabelausu1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Tabelausu1MouseClicked

    private void M_excluirActionPerformed(ActionEvent evt) {//GEN-FIRST:event_M_excluirActionPerformed
        DefaultTableModel tabela11 = (DefaultTableModel) Tabelausu1.getModel();
        Object[] options = {"Sim", "N√£o"};
        int x = JOptionPane.showConfirmDialog(null, "Quer mesmo apagar o usu√°rio " + Tabelausu1.getValueAt(Tabelausu1.getSelectedRow(), 0), null, JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            agenda.removerContatoPorIndice(Tabelausu1.getSelectedRow());
            System.out.println(Tabelausu.getSelectedRow());
            tabela11.removeRow(Tabelausu1.getSelectedRow());
            JOptionPane.showMessageDialog(null, "Excluido com sucesso");
        }
    }//GEN-LAST:event_M_excluirActionPerformed

    private void Tabelausu1MouseReleased(MouseEvent evt) {//GEN-FIRST:event_Tabelausu1MouseReleased
        if (Tabelausu1.getSelectedRow() != -1) {
            if (evt.isPopupTrigger()) {
                BD_Excluir.show(Tabelausu1, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_Tabelausu1MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPopupMenu BD_Excluir;
    private JButton B_Adicionar;
    private JButton B_Aexcluir;
    private JButton B_busPoremail;
    private JButton B_buscar;
    private JButton B_busporcpf;
    private JButton B_buspornome;
    private JButton B_salvar;
    private JComboBox Box_pp;
    private JFormattedTextField CpfAdd;
    private JFormattedTextField CpfUsu;
    private JTextField EmailAdd;
    private JTextField EmailUsu;
    private JMenuItem M_excluir;
    private JTextField NomeUsu;
    private JPanel P_Bcpf;
    private JPanel P_Bemail;
    private JPanel P_Bnome;
    private JPanel P_Visualizar;
    private JPanel P_buscar;
    private JPanel P_fixo;
    private JPanel P_inserir;
    private JPanel P_limpov;
    private JPanel P_tabelabusc;
    private JPanel P_txtbusc;
    private JPanel Pl_JanelaTxt;
    private JPanel Pl_buscarpor;
    private JPanel Pl_opcoes;
    private JTable Tabelausu;
    private JTable Tabelausu1;
    private JFormattedTextField TelAdd;
    private JButton Ver;
    private JPanel bemvindo;
    private JLabel jLabel1;
    private JLabel jLabel13;
    private JLabel jLabel2;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JTextField nomeAdd;
    private JPanel p_limpotxtbusc;
    private JTextArea textousubusc;
    // End of variables declaration//GEN-END:variables
//c√≥digo no bot√£o fechar - salvar arquivo

    private void bot√£oX() {

        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                //caixa de dialogo retorna um inteiro  
                int resposta = JOptionPane.showConfirmDialog(null, "Deseja finalizar essa opera√ß√£o?", "Finalizar", JOptionPane.YES_NO_OPTION);

                //sim = 0, nao = 1  
                if (resposta == 0) {
                    FileWriter arq = null;
                    try {
                        arq = new FileWriter("src\\tabuada.ifd");
                    } catch (IOException ex) {
                        Logger.getLogger(MenuInicial.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    PrintWriter gravarArq = new PrintWriter(arq);
                    carq = new ArrayList<Contato>();
                    carq = agenda.returncontatos();
                    for (int i = 0; i < carq.size(); i++) {
                        gravarArq.print(carq.get(i).getNome() + ";" + carq.get(i).getCPF() + ";" + carq.get(i).getEmail() + ";" + carq.get(i).getTelefone() + "\n");
                    }
                    try {
                        arq.close();
                    } catch (IOException ex) {
                        Logger.getLogger(MenuInicial.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.exit(0);

                }

            }
        });
    }
//inserir icone

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("favicon.png")));
    }

}
